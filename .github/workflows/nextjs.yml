name: portfolio

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server-side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: ${{ env.manager }} ${{ env.command }}

      - name: Build with Next.js
        run: ${{ env.runner }} next build

      - name: Static HTML export with Next.js
        run: ${{ env.runner }} next export

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: static-html
          path: out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: static-html
          path: out

      - name: Configure Git
        run: |
          git config --global user.name "Your GitHub Username"
          git config --global user.email "your.email@example.com"

      - name: Deploy to GitHub Pages
        run: |
          git clone https://github.com/${{ github.repository }}.git
          cd portfolio
          git checkout gh-pages
          cp -R ../out/* ./
          git add .
          git commit -m "Deploy Next.js site to GitHub Pages"
          git push origin gh-pages

